{"remainingRequest":"V:\\qfsx\\VideoSystem\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!V:\\qfsx\\VideoSystem\\vue-element-admin\\node_modules\\vue-ele-upload-video\\lib\\EleUploadVideo.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"V:\\qfsx\\VideoSystem\\vue-element-admin\\node_modules\\vue-ele-upload-video\\lib\\EleUploadVideo.vue","mtime":499162500000},{"path":"V:\\qfsx\\VideoSystem\\vue-element-admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"V:\\qfsx\\VideoSystem\\vue-element-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"V:\\qfsx\\VideoSystem\\vue-element-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"V:\\qfsx\\VideoSystem\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"V:\\qfsx\\VideoSystem\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5lbGUtdXBsb2FkLXZpZGVvX21hc2tfX2l0ZW0gew0KICBwYWRkaW5nOiAwIDEwcHg7DQp9DQoNCi5lbGUtdXBsb2FkLXZpZGVvIC5lbC11cGxvYWRfX3RpcCB7DQogIGxpbmUtaGVpZ2h0OiAxMnB4Ow0KfQ0K"},{"version":3,"sources":["EleUploadVideo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+PA;AACA;AACA;;AAEA;AACA;AACA","file":"EleUploadVideo.vue","sourceRoot":"node_modules/vue-ele-upload-video/lib","sourcesContent":["<template>\r\n  <div class=\"ele-upload-video\">\r\n    <!-- 上传组件 -->\r\n    <el-upload\r\n      :accept=\"accept\"\r\n      :action=\"action\"\r\n      :before-upload=\"handleBeforeUploadVideo\"\r\n      :data=\"data\"\r\n      :disabled=\"videoUploadPercent > 0 && videoUploadPercent < 100\"\r\n      :headers=\"headers\"\r\n      :httpRequest=\"httpRequest\"\r\n      :name=\"name\"\r\n      :on-error=\"handleUploadError\"\r\n      :on-progress=\"handleUploadProcess\"\r\n      :on-success=\"handleUploadSuccess\"\r\n      :show-file-list=\"false\"\r\n      :withCredentials=\"withCredentials\"\r\n      drag\r\n      v-if=\"!value\"\r\n    >\r\n      <!-- 上传进度 -->\r\n      <el-progress\r\n        :percentage=\"videoUploadPercent\"\r\n        style=\"margin-top: 20px;\"\r\n        type=\"circle\"\r\n        v-if=\"videoUploadPercent > 0\"\r\n      />\r\n\r\n      <!-- 上传提示 -->\r\n      <template v-else>\r\n        <i class=\"el-icon-upload\"></i>\r\n        <div class=\"el-upload__text\">\r\n          将视频拖到此处，或\r\n          <em>点击上传</em>\r\n        </div>\r\n        <div class=\"el-upload__tip\" slot=\"tip\" v-if=\"showTip\">\r\n          请上传\r\n          <span style=\"color: #f56c6c;\"\r\n            >&nbsp;{{\r\n              this.fileType ? this.fileType.join(\"/\") : \"视频\"\r\n            }}&nbsp;</span\r\n          >格式文件\r\n          <template v-if=\"fileSize\">\r\n            ，且文件大小不超过\r\n            <span style=\"color: #f56c6c;\">{{ fileSize }}</span\r\n            >&nbsp;MB\r\n          </template>\r\n        </div>\r\n      </template>\r\n    </el-upload>\r\n\r\n    <!-- 视频缩略 -->\r\n    <vue-hover-mask v-if=\"value\">\r\n      <video\r\n        :autoplay=\"false\"\r\n        :src=\"value\"\r\n        :style=\"{\r\n          width: width + 'px',\r\n          height: height ? height + 'px' : 'auto',\r\n        }\"\r\n      >\r\n        您的浏览器不支持视频播放\r\n      </video>\r\n      <template v-slot:action>\r\n        <span @click=\"handlePlayerVideo\" class=\"ele-upload-video_mask__item\">\r\n          <i class=\"el-icon-zoom-in\"></i>\r\n        </span>\r\n        <span @click=\"handleRemove\" class=\"ele-upload-video_mask__item\">\r\n          <i class=\"el-icon-delete\"></i>\r\n        </span>\r\n      </template>\r\n    </vue-hover-mask>\r\n\r\n    <!-- 弹窗播放 -->\r\n    <el-dialog :visible.sync=\"isShowVideo\" append-to-body>\r\n      <video\r\n        :autoplay=\"true\"\r\n        :src=\"value\"\r\n        controls=\"controls\"\r\n        style=\"width: 100%;\"\r\n        v-if=\"isShowVideo\"\r\n      >\r\n        您的浏览器不支持视频播放\r\n      </video>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VueHoverMask from \"vue-hover-mask\";\r\n\r\nexport default {\r\n  name: \"EleUploadVideo\",\r\n  components: {\r\n    VueHoverMask,\r\n  },\r\n  props: {\r\n    // 值\r\n    value: {\r\n      type: String,\r\n    },\r\n    // 上传地址\r\n    action: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    // 响应处理函数\r\n    responseFn: Function,\r\n    // 文件大小限制(Mb)\r\n    fileSize: {\r\n      type: Number,\r\n    },\r\n    // 显示宽度(px)\r\n    width: {\r\n      type: Number,\r\n      default: 360,\r\n    },\r\n    // 显示高度(默认auto)\r\n    height: {\r\n      type: Number,\r\n    },\r\n    // 是否显示提示\r\n    isShowTip: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 是否显示上传成功的提示\r\n    isShowSuccessTip: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 文件类型\r\n    fileType: {\r\n      type: Array,\r\n    },\r\n    // 设置上传的请求头部(同官网)\r\n    headers: Object,\r\n    // 支持发送 cookie 凭证信息 (同官网)\r\n    withCredentials: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    // 上传时附带的额外参数(同官网)\r\n    data: {\r\n      type: Object,\r\n    },\r\n    // 上传的文件字段名 (同官网)\r\n    name: {\r\n      type: String,\r\n      default: \"file\",\r\n    },\r\n    // 覆盖默认的上传行为，可以自定义上传的实现 (同官网)\r\n    httpRequest: Function,\r\n    // 接受上传的文件类型（thumbnail-mode 模式下此参数无效）(同官网)\r\n    accept: String,\r\n    // 删除前的操作(同官网)\r\n    beforeRemove: Function,\r\n  },\r\n  data() {\r\n    return {\r\n      isShowVideo: false,\r\n      videoUploadPercent: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    // 是否显示提示\r\n    showTip() {\r\n      return this.isShowTip && (this.fileType || this.fileSize);\r\n    },\r\n  },\r\n  methods: {\r\n    // 上传大小和格式检测\r\n    handleBeforeUploadVideo(file) {\r\n      // 校检格式\r\n      let isVideo = false;\r\n      if (Array.isArray(this.fileType)) {\r\n        const type = file.type.split(\"/\");\r\n        isVideo = type[0] === \"video\" && this.fileType.includes(type[1]);\r\n      } else {\r\n        isVideo = file.type.includes(\"video\");\r\n      }\r\n\r\n      if (!isVideo) {\r\n        this.$message.error(`${file.name}格式不正确, 请上传格式正确的视频`);\r\n        return false;\r\n      }\r\n\r\n      // 校检文件大小\r\n      if (this.fileSize) {\r\n        const isLt = file.size / 1024 / 1024 < this.fileSize;\r\n        if (!isLt) {\r\n          this.$message.error(`上传视频大小不能超过${this.fileSize}MB哦!`);\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n\r\n    // 上传进度\r\n    handleUploadProcess(event, file) {\r\n      this.videoUploadPercent = Number(file.percentage.toFixed(0));\r\n    },\r\n\r\n    // 上传成功\r\n    handleUploadSuccess(response, file) {\r\n      this.videoUploadPercent = 0;\r\n      if (this.isShowSuccessTip) {\r\n        this.$message.success(\"上传成功!\");\r\n      }\r\n      if (this.responseFn) {\r\n        this.$emit(\"input\", this.responseFn(response, file));\r\n      } else {\r\n        this.$emit(\"input\", response);\r\n      }\r\n    },\r\n\r\n    // 上传失败\r\n    handleUploadError(err, file, fileList) {\r\n      this.$message.error(\"上传失败, 请重试!\");\r\n      this.videoUploadPercent = 0;\r\n      this.$emit(\"error\", err, file, fileList);\r\n    },\r\n\r\n    // 删除视频\r\n    doRemove() {\r\n      this.$emit(\"delete\");\r\n      this.$emit(\"input\", null);\r\n    },\r\n\r\n    handleRemove() {\r\n      if (!this.beforeRemove) {\r\n        this.doRemove();\r\n      } else if (typeof this.beforeRemove === \"function\") {\r\n        const before = this.beforeRemove(this.value);\r\n        if (before && before.then) {\r\n          before.then(\r\n            () => {\r\n              this.doRemove();\r\n            },\r\n            () => {}\r\n          );\r\n        } else if (before !== false) {\r\n          this.doRemove();\r\n        }\r\n      }\r\n    },\r\n    // 播放视频\r\n    handlePlayerVideo() {\r\n      this.isShowVideo = true;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.ele-upload-video_mask__item {\r\n  padding: 0 10px;\r\n}\r\n\r\n.ele-upload-video .el-upload__tip {\r\n  line-height: 12px;\r\n}\r\n</style>\r\n"]}]}